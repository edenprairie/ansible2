---
- name: Ensure that python-pip is installed
  yum:
    name: python-pip
    state: present

- name: Make sure the pyOpenSSL used is from pip, not Rpms
  yum:
    name: pyOpenSSL
    state: absent

- name: Install latest version of pyOpenSSL with pip
  pip:
    name: pyOpenSSL>=18.0.0

- name: Create the certificate directories
  file:
    path: '{{ item }}'
    state: directory
    mode: 0755
  loop:
    - /etc/pki/tls/certs
    - /etc/pki/tls/csr
    - /etc/pki/tls/private

- name: Generate the private key
  openssl_privatekey:
    state: present
    path: /etc/pki/tls/private/{{ ansible_fqdn }}.pem.key
    size: 4096
    type: RSA
    mode: 0640
  register: rsaResults

- name: Generate the CSR
  openssl_csr:
    state: present
    path: /etc/pki/tls/csr/{{ ansible_fqdn }}.csr
    privatekey_path: '{{ rsaResults.filename }}'
    common_name: '{{ ansible_fqdn }}'
    country_name: US
    state_or_province_name: California
    key_usage:
      - digitalSignature
      - nonRepudiation
      - keyEncipherment
    extended_key_usage: 
      - serverAuth
      - clientAuth
      - codeSigning
      - emailProtection
    subject_alt_name: 'DNS:{{ ansible_fqdn }},DNS:www.{{ ansible_fqdn }}'
  register: csrResults

- name: Create the self signed certificate for the server
  openssl_certificate:
    csr_path: '{{ csrResults.filename }}'
    path: /etc/pki/tls/certs/{{ ansible_fqdn }}.crt
    privatekey_path: '{{ csrResults.privatekey }}'
    provider: selfsigned
    selfsigned_digest: sha256
    state: present

- name: Fetch all certificates from each server
  fetch:
    src: /etc/pki/tls/certs/{{ ansible_fqdn }}.crt
    dest: certs/
    flat: yes

- name: Copy all internal certificates to each server
  copy:
    src: certs/
    dest: /etc/pki/ca-trust/source/anchors
    owner: root
    group: root
    mode: 0644
  notify: Update certificate store
